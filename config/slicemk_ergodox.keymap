#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_del {
            timeout-ms = <25>;
            key-positions = <38 27>;
            bindings = <&kp DEL>;
        };
        combo_bksp {
            timeout-ms = <25>;
            key-positions = <38 39>;
            bindings = <&kp BKSP>;
        };
        combo_ret {
            timeout-ms = <25>;
            key-positions = <35 36>;
            bindings = <&kp RET>;
        };
        combo_spc {
            timeout-ms = <25>;
            key-positions = <44 45>;
            bindings = <&kp SPC>;
        };
        combo_tab {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp TAB>;
        };
        combo_esc_l {
            timeout-ms = <30>;
            key-positions = <33 34>;
            bindings = <&kp ESC>;
        };
        combo_esc_r {
            timeout-ms = <30>;
            key-positions = <36 50>;
            bindings = <&kp ESC>;
        };
        combo_lctl {
            timeout-ms = <30>;
            key-positions = <42 43>;
            bindings = <&kp LCTL>;
        };
        combo_rctl {
            timeout-ms = <30>;
            key-positions = <52 53>;
            bindings = <&kp RCTL>;
        };
        combo_lalt {
            timeout-ms = <30>;
            key-positions = <43 44>;
            bindings = <&kp LALT>;
        };
        combo_ralt {
            timeout-ms = <30>;
            key-positions = <51 52>;
            bindings = <&kp RALT>;
        };
        combo_lgui {
            timeout-ms = <30>;
            key-positions = <45 46>;
            bindings = <&kp LGUI>;
        };
        combo_rgui {
            timeout-ms = <30>;
            key-positions = <49 50>;
            bindings = <&kp RGUI>;
        };
        combo_lctl_lalt {
            timeout-ms = <30>;
            key-positions = <42 43 44>;
            bindings = <&kp LC(LALT)>;
        };
        combo_rctl_ralt {
            timeout-ms = <30>;
            key-positions = <51 52 53>;
            bindings = <&kp RC(RALT)>;
        };
        combo_lalt_tab {
            timeout-ms = <30>;
            key-positions = <43 44 45>;
            bindings = <&kp LA(TAB)>;
        };
        combo_ralt_tab {
            timeout-ms = <30>;
            key-positions = <50 51 52>;
            bindings = <&kp RA(TAB)>;
        };
        combo_lgui_tab {
            timeout-ms = <30>;
            key-positions = <44 45 46>;
            bindings = <&kp LG(TAB)>;
        };
        combo_rgui_tab {
            timeout-ms = <30>;
            key-positions = <49 50 51>;
            bindings = <&kp RG(TAB)>;
        };
        combo_left {
            timeout-ms = <30>;
            key-positions = <35 36 37>;
            bindings = <&kp LARW>;
        };
        combo_down {
            timeout-ms = <30>;
            key-positions = <36 37 38>;
            bindings = <&kp DARW>;
        };
        combo_up {
            timeout-ms = <30>;
            key-positions = <24 25 26>;
            bindings = <&kp UARW>;
        };
        combo_right {
            timeout-ms = <30>;
            key-positions = <37 38 39>;
            bindings = <&kp RARW>;
        };
        combo_home {
            timeout-ms = <30>;
            key-positions = <23 35>;
            bindings = <&kp HOME>;
        };
        combo_pgdn {
            timeout-ms = <30>;
            key-positions = <24 36>;
            bindings = <&kp PGDN>;
        };
        combo_pgup {
            timeout-ms = <30>;
            key-positions = <25 37>;
            bindings = <&kp PGUP>;
        };
        combo_end {
            timeout-ms = <30>;
            key-positions = <26 38>;
            bindings = <&kp END>;
        };
        combo_layers {
            timeout-ms = <25>;
            key-positions = <36 37 38 39>;
            bindings = <&mo 9>;
        };
    };
    behaviors {
        tdl: tap_dance_l {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_L";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 4>, <&mo 7>;
        };
        tdr: tap_dance_r {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_R";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 5>, <&mo 7>, <&mo 8>;
        };
    };
};

/ {
	keymap {
		compatible = "zmk,keymap";

		layer_0 {
			bindings = <
				&bootloader
				&kp GRAV &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &none &none &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0 &kp BKSP
				&kp TAB  &kp Q        &kp W        &kp E        &kp R        &kp T        &none &none &kp Y        &kp U        &kp I        &kp O        &kp P        &kp BKSP
				&mo 5    &kp A        &kp S        &kp D        &kp F        &kp G                    &kp H        &kp J        &kp K        &kp L        &kp SEMI     &kp SQT
				&kp LSFT &kp Z        &kp X        &kp C        &kp V        &kp B        &none &none &kp N        &kp M        &kp CMMA     &kp DOT      &kp SQT      &kp RET
				&kp LCTL &kp LGUI     &kp LCTL     &kp LALT     &tdl                                               &tdr         &kp LCTL     &kp LALT     &kp LGUI     &none
				                                                             &none        &none &none              &none
				                                                &kp LSFT     &kp SPC      &none &none &kp LSFT     &kp SPC
				                                                                          &none &none
			>;
		};

		layer_1 {
			bindings = <
				&bootloader
				&kp GRAV &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &none &none &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0 &kp BKSP
				&kp TAB  &kp Q        &kp W        &kp E        &kp R        &kp T        &none &none &kp Y        &kp U        &kp I        &kp O        &kp P        &kp BKSP
				&mo 5    &kp A        &kp S        &kp D        &kp F        &kp G                    &kp H        &kp J        &kp K        &kp L        &kp SEMI     &kp SQT
				&kp LSFT &kp Z        &kp X        &kp C        &kp V        &kp B        &none &none &kp N        &kp M        &kp CMMA     &kp DOT      &kp SQT      &kp RET
				&kp LCTL &kp LGUI     &kp LCTL     &kp LALT     &tdl                                               &tdr         &kp LCTL     &kp LALT     &kp LGUI     &none
				                                                             &none        &none &none              &none
				                                                &kp SPC      &kp LSFT     &none &none &kp SPC      &kp LSFT
				                                                                          &none &none
			>;
		};

		layer_2 {
			bindings = <
				&bootloader
				&kp GRAV &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &none  &none  &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0 &kp BKSP
				&kp TAB  &kp Q        &kp UARW     &kp E        &kp R        &kp T        &trans &trans &kp Y        &kp U        &kp I        &kp O        &kp P        &kp BKSP
				&mo 5    &kp LARW     &kp DARW     &kp RARW     &kp F        &kp G                      &kp H        &kp J        &kp K        &kp L        &kp SEMI     &kp SQT
				&kp LSFT &kp Z        &kp X        &kp C        &kp V        &kp B        &trans &trans &kp N        &kp M        &kp CMMA     &kp DOT      &kp SQT      &kp RET
				&kp LCTL &kp LGUI     &kp LCTL     &kp LALT     &tdl                                                 &tdr         &kp LCTL     &kp LALT     &kp LGUI     &none
				                                                             &none        &none  &none               &none
				                                                &kp LSFT     &kp SPC      &none  &none &kp LSFT      &kp SPC
				                                                                          &none  &none
			>;
		};

		layer_3 {
			bindings = <
				&bootloader
				&kp GRAV &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &none  &none  &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0 &kp BKSP
				&kp TAB  &kp Q        &kp W        &kp E        &kp R        &kp T        &trans &trans &kp PGUP     &kp HOME     &kp UARW     &kp END      &kp P        &trans
				&mo 5    &kp A        &kp S        &kp D        &kp F        &kp G                      &kp PGDN     &kp LARW     &kp DARW     &kp RARW     &kp SEMI     &trans
				&kp LSFT &kp Z        &kp X        &kp C        &kp V        &kp B        &trans &trans &kp N        &kp M        &kp CMMA     &kp DOT      &kp SQT      &kp RET
				&kp LCTL &kp LGUI     &kp LCTL     &kp LALT     &tdl                                                 &tdr         &kp LCTL     &kp LALT     &kp LGUI     &none
				                                                             &none        &none  &none  &tog 5
				                                                &kp LSFT     &kp SPC      &none  &none  &kp LSFT      &kp SPC
				                                                                          &none  &none
			>;
		};

		layer_4 {
			bindings = <
				&bootloader
				&trans &trans       &trans       &trans       &trans       &trans       &trans &trans &trans       &trans       &trans       &trans       &trans       &trans
				&trans &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0 &trans &trans &trans       &kp MINUS    &kp EQUAL    &kp UNDER    &kp PLUS     &trans
				&trans &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5               &kp NUMBER_6 &kp NUMBER_7 &kp NUMBER_8 &kp NUMBER_9 &kp NUMBER_0 &trans
				&trans &kp GRAV     &kp ESC      &kp TAB      &kp RET      &kp BKSP     &trans &trans &kp BSLH     &kp FSLH     &trans       &trans       &trans       &trans
				&trans &trans       &trans       &trans       &trans                                               &trans       &trans       &trans       &trans       &trans
				                                                           &trans       &trans &trans &trans
				                                              &trans       &trans       &trans &trans &trans       &trans
				                                                                        &trans &trans
			>;
		};

		layer_5 {
			bindings = <
				&bootloader
				&trans &trans      &trans      &trans      &trans      &trans    &trans &trans &trans    &trans    &trans   &trans   &trans    &trans
				&trans &kp CARET   &kp AMPS    &kp STAR    &kp LPAR    &kp RPAR  &trans &trans &trans    &kp LBKT  &kp RBKT &kp LBRC &kp RBRC  &trans
				&trans &kp EXCL    &kp AT      &kp POUND   &kp DLLR    &kp PRCNT               &kp CARET &kp AMPS  &kp STAR &kp LPAR &kp RPAR  &trans
				&trans &kp TILD    &kp LS(ESC) &kp LS(TAB) &kp LS(RET) &kp DEL   &trans &trans &kp PIPE  &kp QMARK &trans   &trans   &trans    &trans
				&trans &trans      &trans      &trans      &trans                                        &trans    &trans   &trans   &trans    &trans
				                                                       &trans    &trans &trans &trans
				                                           &trans      &trans    &trans &trans &trans    &trans
				                                                                 &trans &trans
			>;
		};

		layer_6 {
			bindings = <
				&bootloader
				&trans &trans      &trans   &trans   &trans   &trans   &trans &trans &trans          &trans    &trans       &trans     &trans       &trans
				&trans &kp KP_NLCK &kp HOME &kp UARW &kp END  &kp PGUP &trans &trans &kp KP_MULTIPLY &kp KP_N7 &kp KP_N8    &kp KP_N9  &kp KP_PLUS  &trans
				&trans &kp CLCK    &kp LARW &kp DARW &kp RARW &kp PGDN               &kp KP_DIVIDE   &kp KP_N4 &kp KP_N5    &kp KP_N6  &kp KP_MINUS &trans
				&trans &kp DEL     &kp ESC  &kp TAB  &kp RET  &kp BKSP &trans &trans &kp KP_N0       &kp KP_N1 &kp KP_N2    &kp KP_N3  &kp KP_EQUAL &kp KP_ENTER
				&trans &trans      &trans   &trans   &trans                                          &trans    &kp KP_COMMA &kp KP_DOT &trans       &trans
				                                              &trans   &trans &trans &trans
				                                     &trans   &trans   &trans &trans &trans          &trans
				                                                       &trans &trans
			>;
		};

		layer_7 {
			bindings = <
				&bootloader
				&trans &trans  &trans  &trans  &trans  &trans   &trans &trans &trans   &trans   &trans   &trans   &trans   &trans
				&trans &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &trans &trans &kp HOME &kp PGDN &kp PGUP &kp END  &kp PRSC &kp DEL
				&trans &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                 &kp LARW &kp DARW &kp UARW &kp RARW &kp INS  &trans
				&trans &kp F11 &kp F12 &kp TAB &kp RET &kp BKSP &trans &trans &trans   &trans   &trans   &trans   &trans   &trans
				&trans &trans  &trans  &trans  &trans                                  &trans   &trans   &trans   &trans   &trans
				                                       &trans   &trans &trans &trans
				                               &trans  &trans   &trans &trans &trans   &trans
				                                                &trans &trans
			>;
		};

		layer_8 {
			bindings = <
				&bootloader
				&none &none        &none        &none        &none        &sys_reset   &bootloader &bootloader &sys_reset  &none           &none        &none        &none      &none
				&none &none        &none        &none        &none        &none        &none       &none       &kp C_PWR   &kp C_BRI_UP    &kp C_PREV   &kp C_NEXT   &kp C_PP   &kp C_EJECT
				&none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                         &kp C_RESET &kp C_BRI_DN    &kp C_RW     &kp C_FF     &kp C_STOP &none
				&none &bt BT_CLR   &bt BT_PRV   &bt BT_NXT   &out OUT_BLE &out OUT_USB &none       &none       &kp C_SLEEP &kp C_AL_LOGOFF &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE &none
				&none &none        &none        &none        &none                                                         &none           &none        &none        &none      &none
				                                                          &none        &none       &none       &none
				                                             &none        &none        &none       &none       &none       &none
				                                                                       &none       &none
			>;
		};

		layer_9 {
			bindings = <
				&bootloader
				&none &none &none &none &none &none &none &none &none &none &none &none &none &none
				&none &to 6 &to 7 &to 8 &to 9 &to 0 &none &none &none &none &none &none &none &none
				&none &to 1 &to 2 &to 3 &to 4 &to 5             &none &none &none &none &none &none
				&none &none &none &none &none &none &none &none &none &none &none &none &none &none
				&none &none &none &none &none                         &none &none &none &none &none
				                              &none &none &none &none
				                        &none &none &none &none &none &none
				                                    &none &none
			>;
		};
	};
};
